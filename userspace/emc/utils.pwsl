// EMC - utilities
//
//    Copyright (C) 2021  adazem009
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
linkdef/"skip_loop","skl","global"
{
	warp
		set/"si",res1/"pos",0
		bintolist/$gl_vn/"gl_vn"
		bintolist/$gl_vv/"gl_vv"
		getitem/"command",1/"it"
		while/[it == 3] nand [pos == 0]
			calc/"si=si+1"
			smc_getarg/"script",si,"vn","vv","gl_vn","gl_vv"/"si2","command","argument"
			getitem/"command",1/"it"
			set/"si",si2/"res1",si2
			if/[it == 2] or [it == 7]
				calc/"pos=pos+1"
			endif
			if/[it == 3] and [pos > 0]
				calc/"pos=pos-1"
			endif
		endloop
		listtobin/"gl_vn"/"$gl_vn"
		listtobin/"gl_vv"/"$gl_vv"
	endwarp
}
linkdef/"skip_if","ski","global"
{
	warp
		set/"si",res1/"pos",1
		bintolist/$gl_vn/"gl_vn"
		bintolist/$gl_vv/"gl_vv"
		getitem/"command",1/"it"
		while/[it == 5] nand [pos == 0]
			calc/"si=si+1"
			smc_getarg/"script",si,"vn","vv","gl_vn","gl_vv"/"si2","command","argument"
			getitem/"command",1/"it"
			set/"si",si2/"res1",si2
			if/[it == 4]
				calc/"pos=pos+1"
			endif
			if/[it == 5]
				calc/"pos=pos-1"
			endif
		endloop
		listtobin/"gl_vn"/"$gl_vn"
		listtobin/"gl_vv"/"$gl_vv"
	endwarp
}
linkdef/"_if","if","global"
{
	warp
		// _if/[global? 1/0],[global custom ID]
		// This function was ported from SMC Computer.
		// TO-DO: This function is very buggy and decreases performance.
		//        It would be better if it was in SMC Computer
		//        like the instruction interpreter.
		bintolist/$gl_vn/"gl_vn"
		bintolist/$gl_vv/"gl_vv"
		getitem/"arg_1",1/"gl?"
		if/[gl? == 1]
			getitem/"arg_1",2/"cid"
			// TO-DO: Check if the interpreting below works correctly.
			// It was breaking arguments in recent tests.
			smc_getarg/"script",cid,"vn","vv","gl_vn","gl_vv"/"si2","command","argument"
		else
			set/"gl?",0/"cid",si
		endif
		setlist/"gates"
		set/"si3",0
		getlistlength/"command"/"cmdl"
		calc/"cmdl=cmdl-1"
		repeat/cmdl
			calc/"si3=si3+1"
			set/"ln","argument",si3
			mod/si3,2/"md"
			if/[md == 1]
				set/"go",0
				getitem/ln,2/"op"
				getitem/ln,1/"A1"
				getitem/ln,3/"A2"
				if/[op == "=="]
					// A1 equals A2
					if/[A1 == A2]
						set/"go",1
					else
						set/"go",0
					endif
				else
					if/[op == "!="]
						// NOT A1 equals A2
						if/[A1 == A2]
							set/"go",0
						else
							set/"go",1
						endif
					else
						if/[op == ">"]
							// A1 is greater than A2
							if/[A1 > A2]
								set/"go",1
							else
								set/"go",0
							endif
						else
							if/[op == "!>"]
								// NOT A1 is greater than A2
								if/[A1 !> A2]
									set/"go",1
								else
									set/"go",0
								endif
							else
								if/[op == "<"]
									// A1 is lower than A2
									if/[A1 < A2]
										set/"go",1
									else
										set/"go",0
									endif
								else
									if/[op == "!<"]
										// NOT A1 is lower than A2
										if/[A1 !< A2]
											set/"go",1
										else
											set/"go",0
										endif
									else
										if/[op == ">="]
											// A1 is greater or equal to A2
											if/[A1 >= A2]
												set/"go",1
											else
												set/"go",0
											endif
										else
											if/[op == "!<="]
												// NOT A1 is greater or equal to A2
												if/[A1 !<= A2]
													set/"go",1
												else
													set/"go",1
												endif
											else
												if/[op == "<="]
													// A1 is lower or equal to A2
													if/[A1 <= A2]
														set/"go",1
													else
														set/"go",1
													endif
												else
													if/[op == "!<="]
														// NOT A1 is lower or equal to A2
														if/[A1 !<= A2]
															set/"go",1
														else
															set/"go",1
														endif
													endif
												endif
											endif
										endif
									endif
								endif
							endif
						endif
					endif
				endif
				getitem/ln,4/"aop"
				if/[aop == "!"]
					// NOT
					calc/"go=1-go"
				endif
				append/go/"gates"
			else
				getitem/ln,1/"op"
				append/op/"gates"
			endif
		endloop
		set/"go",0/"i2",0
		getlistlength/"gates"/"cmdl"
		if/[cmdl == 1]
			getitem/"gates",1/"go"
		endif
		// ^^^ I used cmdl here because it isn't used by anything.
		calc/"cmdl=cmdl-1"
		div/cmdl,2/"cmdl"
		repeat/cmdl
			calc/"i2=i2+2"
			setlist/"gate"
			if/[i2 == 2]
				calc/"tmp=i2-1"
				getitem/"gates",tmp/"tmp"
				append/tmp/"gate"
			else
				append/go/"gate"
			endif
			getitem/"gates",i2/"tmp"
			append/tmp/"gate"
			calc/"tmp=i2+1"
			getitem/"gates",tmp/"tmp"
			append/tmp/"gate"
			getitem/"gate",2/"op"
			getitem/"gate",1/"A1"
			getitem/"gate",3/"A2"
			calc/"sum=A1+A2"
			if/[op == "&&"]
				// AND
				if/[sum == 2]
					set/"go",1
				else
					set/"go",0
				endif
			else
				if/[op == "!&"]
					// NAND
					if/[sum != 2]
						set/"go",1
					else
						set/"go",0
					endif
				else
					if/[op == "||"]
						// OR
						if/[sum != 0]
							set/"go",1
						else
							set/"go",0
						endif
					else
						if/[op == "!|"]
							// NOR
							if/[sum == 0]
								set/"go",1
							else
								set/"go",0
							endif
						else
							if/[op == "//"]
								// XOR
								if/[sum == 1]
									set/"go",1
								else
									set/"go",0
								endif
							else
								if/[op == "!/"]
									// XNOR
									if/[sum != 1]
										set/"go",1
									else
										set/"go",0
									endif
								endif
							endif
						endif
					endif
				endif
			endif
		endloop
		if/[gl? == 0] and [go == 0]
			set/"si",res1/"pos",1/"c",0
			while/[c == 0]
				calc/"si=si+1"
				smc_getarg/"script",si,"vn","vv","gl_vn","gl_vv"/"si2","command","argument"
				set/"si",si2/"res1",si2
				getitem/"command",1/"opc"
				if/[opc == 4]
					calc/"pos=pos+1"
				endif
				if/[opc == 5] and [pos > 0]
					calc/"pos=pos-1"
				endif
				if/[opc == 5] and [pos == 0]
					set/"c1",1
				else
					set/"c1",0
				endif
				if/[opc == 6] and [pos == 1]
					set/"c2",1
				else
					set/"c2",0
				endif
				if/[c1 == 1] or [c2 == 1]
					set/"c",1
				else
					set/"c",0
				endif
			endloop
		endif
		listtobin/"gl_vn"/"$gl_vn"
		listtobin/"gl_vv"/"$gl_vv"
	endwarp
}
