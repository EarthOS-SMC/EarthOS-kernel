// One of the EMC instructions...
//
//    Copyright (C) 2021  adazem009
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
linkdef/"emc39","emc57","global"
{
	// Create a directory.
	// 39/[path]/[permissions],[owner],[group]
	getitem/"argument1",1/"path2"
	getitem/"argument2",1/"nperms"
	getitem/"argument2",2/"nowner"
	getitem/"argument2",3/"ngroup"
	// Use ftest to check the directory
	_ftest/path2,"w","d"/"ftest"
	// Get directory name
	getitem/"ftest",2/"filename"
	// Get parent directory path
	getitem/"ftest",3/"path2"
	if/[return_code == "ENOENT"]
		set/"return_code",""
		// Check parent directory
		_ftest/path2,"w","d"/"ftest"
		if/[return_code != ""]
			exit
		endif
		source/$tmp_lib_emc32_ls/1
		// Process perms, owner and group
		if/[nperms == ""]
			// Default file permissions
			set/"nperms","rw-rw-r--"
		endif
		if/[nowner == ""]
			// Default owner
			set/"nowner",whoami
		endif
		if/[ngroup == ""]
			// Default group
			set/"ngroup",whoami
		endif
		// Create the directory
		append/0/"ftypes"
		append/filename/"fnames"
		append/""/"fdata"
		append/nperms/"fperms"
		append/nowner/"fowns"
		append/ngroup/"fgroups"
	else
		// Already exists
		set/"return_code","EEXIST"
		exit
	endif
	set/"return_code",""
	// Write to parent directory
	source/$tmp_lib_fixpt/path2/"path2"
	if/[pseudo == ""]
		set/"fs",$rootfs/"tmppt",path2/"pseudo","$rootfs"
	else
		readvar/pseudo/"fs"
		set/"tmppt",pseudo_path
	endif
	source/$tmp_lib_wrdir/fs,"ftypes","fnames","fdata","fperms","fowns","fgroups","fattr"/tmppt,pseudo
	if/[pseudo == "mntfsbin"]
		bintolist/$mount_fsi/"mount_fsi"
		replace/mntid,mntfsbin/"mount_fsi"
		listtobin/"mount_fsi"/"$mount_fsi"
	endif
}
