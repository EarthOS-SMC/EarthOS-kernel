// EarthOS kernel - init
//
//    Copyright (C) 2021  adazem009
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
include/"init/cmdline.pwsl"
//
// define - because it's used only once - when the kernel starts
define/"kinit"
{
	// Set up pseudo filesystems
	_pseudo_tool_init
	// Mount rootfs
	kmsg/"","000255000","Mounting root filesystem..."
	warp
		if/[KERNEL_INPUT_root == ""]
			PANIC/"root parameter not specified"
		endif
		set/"$rootpath",KERNEL_INPUT_root
		readfile/$rootpath/"file"
		set/"file",file
		if/[file == ""]
			set/"it",$rootpath,": Invalid filesystem or the file doesn't exist"
			PANIC/it
		endif
		if/[pseudo != ""]
			set/"filen",file
			set/"file",""
			bintolist/filen/"filel"
			getitem/"filel",1/"tmp"
			deleteitem/1/"filel"
			listtobin/"filel"/"filen"
			set/"tmp",tmp,"_read"
			readvar/tmp/"tmp"
			source/tmp/0/filen
		endif
		set/"$rootfs",file
		// Verify rootfs
		kmsg/"","000255000","Verifying root filesystem..."
		// reqdirs is a list of required directories in /
		setlist/"reqdirs"/"dev","sys"
		_ls/"/",$rootfs/"ftypes","fnames","fdata","fperms","fowns","fgroups","fattr"
		getlistlength/"reqdirs"/"len"
		set/"i",0
		repeat/len
			calc/"i=i+1"
			getitem/"reqdirs",i/"it"
			getindex/"fnames",it/"ix"
			if/[ix == 0]
				set/"it","/",it,": No such file or directory"
				PANIC/it
			endif
		endloop
		// Start init
		kmsg/"","000255000","Executing /sbin/init"
		_ls/"/sbin",$rootfs/"ftypes","fnames","fdata","fperms","fowns","fgroups","fattr"
		getlistlength/"fnames"/"fcount"
		getindex/"fnames","init"/"ix"
		if/[ix == 0]
			PANIC/"/sbin/init: No such file or directory"
		else
			getitem/"fdata",ix/"fd"
		endif
		_userspace_setup
	endwarp
	_start/fd,"wait","root"
}
